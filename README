This is the recipes for a little CONsole-only linux for i586's (or better)
(thus the i586con name) based on buildroot, for use when you just
need to get to a commandline with some tools pretty quickly.

A little list of notable tools i've picked:
- the usual cli partitioning tools
- ntfs-3g and ntfsprogs
- ddrescue
- rsync
- cdrkit (wodim, genisoimage)
- flashrom

How to build:
use ./fextract.sh to download and extract buildroot
use ./init_bdir.sh to initialize a build directory
(optionally make menuconfig or make linux-menuconfig
 if you need/want to adjust the kernel or package selection etc)
make to build it (hopefully)
(Do read the scripts before using them.)


In case you just want the result right now, i have one here:
https://urja.dev/i586con-200628.iso

## Tech notes
-------------
The boot method is kernel + an actual initrd
(the RAMDISK style, with a squashfs on it), so 
that it can fit the entire linux into 64M of ram,
and the boot media can be removed after the bootloader
phase.

Overlayfs and tmpfs are combined to make
the interesting parts of the filesystem writable
(only in ram so everything is lost on reboot or shutdown).

It will try to bring up up to one internet
connection (LAN only) using DHCP, and then
brings up a ssh daemon (no logins are possible
until somebody sets a password for some account),
and it will do this in a very ghetto way 
(eudev runs a script that runs another script
in a screen that was started into the background
earlier during the boot).

NB: There's an experimental HD install feature
of the "best of both worlds" type: compressed
RAM-based linux from HD with saveable
state -- the negatives are:
- you need to list the files to be saved (/etc/saved_files)
- you need to run hd_save.py to save the files
 - this script is quite wack
- all the saved files take RAM (in both the ramdisk and tmpfs)

But the positives are that the system is quite customizable,
requires no disk access past the bootloader and still
boots without waiting for any devices/udev/whatever
and thus allows repartitioning the disk it booted from
if desired.

## ext/
-------

Is a little fun adventure of getting a C compiler on an i586con system
-- buildroot doesn't want to know of this, they purposefully refuse to
support shipping a gcc for the target -- but also i dont really need gcc
(also have you heard of how much RAM it uses these days?)

So, TCC (Tiny C Compiler) will do just fine, and is actually fast on
ancient hardware too :)

Anyways, ext/ has scripts to create a "bolt-on" squashfs that can be
mounted at /opt on an i586con system and provides (for now)
basic TCC incl. the system headers and crt*.o files from buildroot
and make.
