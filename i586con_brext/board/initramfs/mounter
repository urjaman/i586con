#!/busybox sh
# mounter MOUNTPT TRIES SLEEP [DEVICE]
# returns 0 if mounted, 1 if not

ROOT=$(tr ' ' '\n' < /proc/cmdline | grep 'root=' | cut -d = -f 2-)
if echo $ROOT | grep -q "="; then
	FIND_TYPE="$(echo $ROOT | cut -d = -f 1)="
	FIND_VAL=$(echo $ROOT | cut -d = -f 2-)
	FIND_DEV="NODEVICE"
else
	FIND_DEV=$ROOT
	FIND_TYPE="NOTYPE"
	FIND_VAL="NOVALUE"
fi
# rootfsflags saved for the actual tmpfs at / or the kernel rootfs ramfs/tmpfs...
FLAGS=$(tr ' ' '\n' < /proc/cmdline | grep 'mediafsflags=' | cut -d = -f 2-)
if [ -z "$FLAGS" ]; then
	FLAGS="ro"
fi
if [ $2 -gt 1 ]; then
	echo $$ > /waiting-mounter-pid
fi
cd /mnt
TRIES=0
FOUND=0
TMPF=/blkid-$$.txt
while [ $TRIES -lt $2 ]; do
	if [ $TRIES -gt 0 ]; then
		if [ $TRIES -eq 1 ]; then
			echo "Waiting for media..."
		fi
		sleep $3
	fi
	if [ -z "$4" ]; then
		blkid > $TMPF
	else
		blkid "$4" > $TMPF
	fi
	while read dev; do
		DEVICE=$(echo $dev | cut -d : -f 1)
		if [ "$DEVICE" = "$FIND_DEV" ]; then
			FOUND=1
			break
		fi
		INFO=$(echo $dev | cut -d : -f 2)
		while [ "$INFO" != "" ]; do
			TYPE=$(echo $INFO | cut -d \" -f 1)
			VAL=$(echo $INFO | cut -d \" -f 2)
			INFO=$(echo $INFO | cut -d \" -f 3-)
			if [ "$FIND_TYPE" = "$TYPE" ]; then
				if [ "$FIND_VAL" = "$VAL" ]; then
					FOUND=1
					break
				fi
			fi
		done
		if [ $FOUND -gt 0 ]; then
			break
		fi
	done < $TMPF
	TRIES=$((TRIES + 1))
	if [ $FOUND -gt 0 ]; then
		break
	fi
done
if [ $2 -gt 1 ]; then
	rm -f /waiting-mounter-pid
fi
if [ $FOUND -gt 0 ]; then
	# Several mounters can be running at once -- avoid double-mounting
	(
		flock 9
		if mountpoint -q "$1"; then
			exit 0
		fi
		mount -o "$FLAGS" "$DEVICE" "$1"
	) 9>/mounting
fi
if mountpoint -q "$1"; then
	exit 0
fi
exit 1
